{"project": "adirondax", "project_url": "https://adirondax.readthedocs.io/", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"23": "80e7bed9cf026a10f9ac80cde7d9bd00a683deaf", "25": "5b78cd26531768578d7204ed565e5099809259ff", "26": "a4880394ea257161722286491a9e7c7812fc7d93", "36": "bd5f05e853accc7433cbf2adf3707827df2e984b", "38": "5d2658ee58f515e2ca67dc0f46d867e7f04f4579", "39": "92c73f7ece987282599b3ea1158a17117711adf0"}, "revision_to_date": {"23": 1734108210000, "25": 1734115091000, "26": 1734115614000, "36": 1734450837000, "38": 1734453252000, "39": 1734455447000}, "params": {"arch": ["arm64"], "cpu": ["Apple M3 Max"], "machine": ["C916PXT6XW"], "num_cpu": ["16"], "os": ["Darwin 24.1.0"], "ram": ["68719476736"], "python": ["3.12"], "branch": ["main"]}, "graph_param_list": [{"arch": "arm64", "cpu": "Apple M3 Max", "machine": "C916PXT6XW", "num_cpu": "16", "os": "Darwin 24.1.0", "ram": "68719476736", "python": "3.12", "branch": "main"}], "benchmarks": {"bench_inverse_problem.InverseProblemSuite.peakmem_forward_model": {"code": "class InverseProblemSuite:\n    def peakmem_forward_model(self):\n        self.run_forward_model()\n\n    def setup(self):\n        file_path = os.path.join(\n            os.path.dirname(__file__), \"../../examples/schrodinger_poisson/target.png\"\n        )\n        target_data = img.imread(file_path)[:, :, 0]\n        self.rho_target = jnp.flipud(jnp.array(target_data, dtype=float))\n        self.rho_target = 1.0 - 0.5 * (self.rho_target - 0.5)\n        self.rho_target /= jnp.mean(self.rho_target)\n    \n        n = 128\n        nt = 100\n        t_stop = 0.03\n        dt = t_stop / nt\n        self.params = {\n            \"n\": n,\n            \"t_stop\": t_stop,\n            \"dt\": dt,\n            \"nt\": nt,\n        }", "name": "bench_inverse_problem.InverseProblemSuite.peakmem_forward_model", "param_names": [], "params": [], "type": "peakmemory", "unit": "bytes", "version": "998e830c039adff4719656709e892e78c9ecee5c42dff38665f1074df24a6482"}, "bench_inverse_problem.InverseProblemSuite.peakmem_inverse_problem": {"code": "class InverseProblemSuite:\n    def peakmem_inverse_problem(self):\n        self.solve_inverse_problem()\n\n    def setup(self):\n        file_path = os.path.join(\n            os.path.dirname(__file__), \"../../examples/schrodinger_poisson/target.png\"\n        )\n        target_data = img.imread(file_path)[:, :, 0]\n        self.rho_target = jnp.flipud(jnp.array(target_data, dtype=float))\n        self.rho_target = 1.0 - 0.5 * (self.rho_target - 0.5)\n        self.rho_target /= jnp.mean(self.rho_target)\n    \n        n = 128\n        nt = 100\n        t_stop = 0.03\n        dt = t_stop / nt\n        self.params = {\n            \"n\": n,\n            \"t_stop\": t_stop,\n            \"dt\": dt,\n            \"nt\": nt,\n        }", "name": "bench_inverse_problem.InverseProblemSuite.peakmem_inverse_problem", "param_names": [], "params": [], "type": "peakmemory", "unit": "bytes", "version": "ebb4e7407205939f70d1286aa332142453dcdf5d612475d40eeabac8c6d5f870"}, "bench_inverse_problem.InverseProblemSuite.time_forward_model": {"code": "class InverseProblemSuite:\n    def time_forward_model(self):\n        self.run_forward_model()\n\n    def setup(self):\n        file_path = os.path.join(\n            os.path.dirname(__file__), \"../../examples/schrodinger_poisson/target.png\"\n        )\n        target_data = img.imread(file_path)[:, :, 0]\n        self.rho_target = jnp.flipud(jnp.array(target_data, dtype=float))\n        self.rho_target = 1.0 - 0.5 * (self.rho_target - 0.5)\n        self.rho_target /= jnp.mean(self.rho_target)\n    \n        n = 128\n        nt = 100\n        t_stop = 0.03\n        dt = t_stop / nt\n        self.params = {\n            \"n\": n,\n            \"t_stop\": t_stop,\n            \"dt\": dt,\n            \"nt\": nt,\n        }", "min_run_count": 2, "name": "bench_inverse_problem.InverseProblemSuite.time_forward_model", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "36a4f70e000f4b8943066eab43e56a6202d173bd99bb35890e7fd7480c7d7fee", "warmup_time": -1}, "bench_inverse_problem.InverseProblemSuite.time_inverse_problem": {"code": "class InverseProblemSuite:\n    def time_inverse_problem(self):\n        self.solve_inverse_problem()\n\n    def setup(self):\n        file_path = os.path.join(\n            os.path.dirname(__file__), \"../../examples/schrodinger_poisson/target.png\"\n        )\n        target_data = img.imread(file_path)[:, :, 0]\n        self.rho_target = jnp.flipud(jnp.array(target_data, dtype=float))\n        self.rho_target = 1.0 - 0.5 * (self.rho_target - 0.5)\n        self.rho_target /= jnp.mean(self.rho_target)\n    \n        n = 128\n        nt = 100\n        t_stop = 0.03\n        dt = t_stop / nt\n        self.params = {\n            \"n\": n,\n            \"t_stop\": t_stop,\n            \"dt\": dt,\n            \"nt\": nt,\n        }", "min_run_count": 2, "name": "bench_inverse_problem.InverseProblemSuite.time_inverse_problem", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "3621ddd8bf2575d7b6180d639f770836eaa005a117395f8a862438fd9e7538df", "warmup_time": -1}}, "machines": {"C916PXT6XW": {"arch": "arm64", "cpu": "Apple M3 Max", "machine": "C916PXT6XW", "num_cpu": "16", "os": "Darwin 24.1.0", "ram": "68719476736", "version": 1}}, "tags": {"0.0.1": 25, "0.1.0": 23}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}